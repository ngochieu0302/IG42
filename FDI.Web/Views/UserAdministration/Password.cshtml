@using System.Globalization
@model Admin.Models.UserAdministration.DetailsViewModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutNew.cshtml";
}

<section id="gridItems" class="vbox">
    <section class="scrollable wrapper w-f">
        <section class="panel panel-default">
            <header class="panel-heading font-bold">Quản lý quản trị viên: @Model.DisplayName [@Model.Status]</header>
            <div class="panel-body">


                @*            @Html.ActionLink("Details", "Details", "UserAdministration", new { id = Model.User.ProviderUserKey }, null)
            @if (Model.IsRolesEnabled)
            {
                <li>@Html.ActionLink("Roles", "UsersRoles", "UserAdministration", new { id = Model.User.ProviderUserKey }, null)</li>
            }*@

                <div class="bs-example form-horizontal">

                    <div class="CTS.MvcMembership-password">
                        @if (Model.User.IsLockedOut)
                        {
                            <p>Locked out since @Model.User.LastLockoutDate.ToString("MMMM dd, yyyy h:mm:ss tt", CultureInfo.InvariantCulture)</p>
                            using (Html.BeginForm("Unlock", "UserAdministration", new { id = Model.User.ProviderUserKey }))
                            {
                            <input type="submit" value="Unlock Account" />
                            }
                        }
                        else
                        {
                            <div class="form-group">
                                <label class="col-sm-4 control-label">Thay đổi lần cuối</label>
                                <div class="col-sm-8">
                                    @if (Model.User.LastPasswordChangedDate == Model.User.CreationDate)
                                    {
                                        <p class="form-control-static">Never</p>
                                    }
                                    else
                                    { 
                                        <p class="form-control-static">@Model.User.LastPasswordChangedDate.ToString("dd/MM/yyyy h:mm:ss tt", CultureInfo.InvariantCulture)</p>
                                    }
                                </div>
                            </div>  

                                    if (Model.CanResetPassword && Model.RequirePasswordQuestionAnswerToResetPassword)
                                    {
                                        using (Html.BeginForm("ResetPasswordWithAnswer", "UserAdministration", new { id = Model.User.ProviderUserKey }))
                                        {
                            <fieldset>
                                <p>
                                    <dl class="CTS.MvcMembership">
                                        <dt>Password Question:</dt>
                                        if(string.IsNullOrEmpty(Model.User.PasswordQuestion) || string.IsNullOrEmpty(Model.User.PasswordQuestion.Trim())){
                                                        <dd><em>No password question defined.</em></dd>
                                        }else{
                                                        <dd>@Model.User.PasswordQuestion</dd>
                                        }
                                    </dl>
                                </p>
                                <p>
                                    <label for="answer">Password Answer:</label>
                                    @Html.TextBox("answer")
                                </p>
                                <input type="submit" class="btn btn-sm btn-primary" value="Reset to Random Password and Email User" />
                            </fieldset>
                                        }
                                    }
                                    else if (Model.CanResetPassword)
                                    {
                                        using (Html.BeginForm("SetPassword", "UserAdministration", new { id = Model.User.ProviderUserKey }))
                                        { 

                            <div class="form-group">
                                <label class="col-sm-4 control-label">Mật khẩu mới</label>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control" placeholder="..." name="password" id="password" value="" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-offset-4 col-sm-8">
                                    <input type="submit" class="btn btn-sm btn-primary" value="Đổi mật khẩu" />
                                </div>
                            </div>

                                        }
                                        using (Html.BeginForm("ResetPassword", "UserAdministration", new { id = Model.User.ProviderUserKey }))
                                        { 
                            
                            <div class="form-group">
                                <div class="col-sm-offset-4 col-sm-8">
                                    <input type="submit" class="btn btn-sm btn-primary" value="Tạo password mặc ngẫu nhiên và gửi đến email" />
                                </div>
                            </div> 
                                        }
                                    }

                        }
                    </div>

                </div>
            </div>
        </section>
    </section>
</section>
